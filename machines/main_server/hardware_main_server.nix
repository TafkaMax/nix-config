# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

    # r8169 is required for remote unlock
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "r8169" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # qbittorrent

  fileSystems."/var/lib/qbittorrent" =
    { device = "/dev/disk/by-uuid/f2605b91-769c-49ed-9621-be9218814821";
      fsType = "ext4";
    };

  # media

  fileSystems."/home/snd/media/seagate-4tb" =
    { device = "/dev/disk/by-uuid/b94d19b2-5f74-44d8-8d5c-a77c83a77845";
      fsType = "ext4";
    };
    
  fileSystems."/home/snd/media/wd-4tb" =
    { device = "/dev/disk/by-uuid/22009223-21e7-4ca4-a6cb-4b73d7ad4ccb";
      fsType = "ext4";
    };

  # main

  fileSystems."/home/nas" =
    { device = "/dev/disk/by-uuid/6827a859-215e-4c2e-8b16-7486aa77f065";
      fsType = "ext4";
    };
    
  boot.initrd.luks.devices."luks-wd-red-nvme-500gb".device = "/dev/disk/by-uuid/c1e83ddf-58ca-4eb0-875f-6570abb19c2f";
  
#  fileSystems."/home/snd/backups" =
#    { device = "/dev/disk/by-uuid/b0e14874-9280-4cbd-a0a2-5ecbb9b4ec07";
#      fsType = "ext4";
#    };

#  boot.initrd.luks.devices."luks-wd-red-ssd-500gb".device = "/dev/disk/by-uuid/1642b246-c700-4d4e-97bb-da455c71098a";
    
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/22a2598e-471c-4cc8-8d78-ecb50df651ef";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-3b9d6259-6760-47dd-94af-a745916741fb".device = "/dev/disk/by-uuid/3b9d6259-6760-47dd-94af-a745916741fb";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/B699-0E4E";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  #networking.useDHCP = lib.mkDefault false;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
